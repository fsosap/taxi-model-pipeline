steps:
# Clone the repository.
- name: 'gcr.io/cloud-builders/git'
  args: ['clone', '--single-branch', '--branch',
         '$_BRANCH', '$_REPO_URL',
         '--depth', '1',
         '--verbose']
  id: 'Clone Repository'

- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/automated-training/tfx-pipeline', '.']
  dir: 'taxi-model-pipeline'
  id: 'Build TFX Image'
  waitFor: ['Clone Repository']

# - name: 'gcr.io/automated-training/tfx-pipeline'
#   entrypoint: python
#   args: ['-m', 'pytest', '.']
#   dir: 'taxi-model-pipeline/tfx-pipeline/models'
#   id: 'Unit Test'
#   waitFor: ['Clone Repository']

- name: 'gcr.io/automated-training/tfx-pipeline'
  entrypoint: 'tfx'
  args: ['pipeline', 'compile',
          '--pipeline-path', 'kubeflow_v2_runner.py',
          '--engine', 'vertex',
        ]
  dir: 'taxi-model-pipeline/tfx-pipeline'
  id: 'Compile Pipeline'
  waitFor: ['Clone Repository']

- name: 'gcr.io/automated-training/tfx-pipeline'
  entrypoint: 'tfx'
  args: ['pipeline', 'create',
          '--pipeline-path', 'kubeflow_v2_runner.py',
          '--engine', 'vertex',
          '--build-image'
        ]
  dir: 'taxi-model-pipeline/tfx-pipeline'
  id: 'Create Pipeline'
  waitFor: ['Compile Pipeline']  

- name: 'gcr.io/tfx-oss-public/tfx:1.0.0'
  entrypoint: 'tfx'
  args: ['run', 'create',
          '--engine', 'vertex',
          '--pipeline-name', '$_PIPELINE_NAME',
          '--project', '$_PROJECT',
          '--region', '$_REGION'
        ]
  dir: 'taxi-model-pipeline/tfx-pipeline'
  id: 'Create Pipeline Run'
  waitFor: ['Create Pipeline']